"""
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список
только числами. Класс-исключение должен контролировать типы данных элементов списка.

Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
При этом скрипт завершается, сформированный список с числами выводится на экран.

Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При вводе
пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться.
"""


class CheckListIntException(Exception):
    pass


def add_numbs(check_list: list):
    value = input("Введите число (для выхода впишите stop) > ")
    if value == 'stop':
        print("Вы запросили Выход из программы, полученный список:", list_numbers)
        raise EOFError
    try:
        check_list.append(int(value))
    except ValueError:
        raise CheckListIntException(f"Ошибка! Введите число")


list_numbers = []

while True:

    try:
        add_numbs(list_numbers)
    except CheckListIntException as exception:
        print(exception)
